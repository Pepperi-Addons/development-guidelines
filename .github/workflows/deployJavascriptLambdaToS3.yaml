name: Deploy JS Lambda to S3

on:
  workflow_call:
    inputs:
      s3_base_path:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      LOCAL_CODE_ZIP_PATH: "build/code.zip"
      S3_BASE_PATH: "Lambda-handlers/${{ inputs.s3_base_path }}"
      SSM_PARAMETER_NAME: "/lambdas-code/${{ inputs.s3_base_path }}/latest-s3-key"
      
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Create an .npmrc # This will allow downloading private packages from npmjs
        env:
          PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS: ${{ secrets.PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS }}
        if: "${{ env.PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS != '' }}"
        run: echo "//registry.npmjs.org/:_authToken=${{ env.PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS }}" > ~/.npmrc

      - name: Install dependencies
        run: npm install --production  # Only installs necessary dependencies

      - name: Create ZIP file (with node_modules)
        run: |
          mkdir -p build
          zip -r ${{ env.LOCAL_CODE_ZIP_PATH }} . -x ".git/*" ".github/*" "build/*"

      - name: Deploy to PROD
        uses: ./.github/actions/deploy-lambda-code-to-env
        with:
          aws-access-key-id: ${{ secrets.PROD_PUT_LAMBDA_HANDLER_ON_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PROD_PUT_LAMBDA_HANDLER_ON_S3_SECRET_KEY }}
          aws-region: ${{ secrets.PROD_LAMBDA_HANDLER_S3_REGION }}
          s3-bucket: ${{ secrets.PROD_LAMBDA_HANDLER_S3_BUCKET_NAME }}
          s3-base-path: ${{ env.S3_BASE_PATH}}
          ssm-parameter-name: ${{ env.SSM_PARAMETER_NAME}}
          zip-file-path: ${{ env.LOCAL_CODE_ZIP_PATH }}

      - name: Deploy to EU
        uses: ./.github/actions/deploy-lambda-code-to-env
        with:
          aws-access-key-id: ${{ secrets.EU_PUT_LAMBDA_HANDLER_ON_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.EU_PUT_LAMBDA_HANDLER_ON_S3_SECRET_KEY }}
          aws-region: ${{ secrets.EU_LAMBDA_HANDLER_S3_REGION }}
          s3-bucket: ${{ secrets.EU_LAMBDA_HANDLER_S3_BUCKET_NAME }}
          s3-base-path: ${{ env.S3_BASE_PATH}}
          ssm-parameter-name: ${{ env.SSM_PARAMETER_NAME}}
          zip-file-path: ${{ env.LOCAL_CODE_ZIP_PATH }}
  
      - name: Deploy to SANDBOX
        uses: ./.github/actions/deploy-lambda-code-to-env
        with:
          aws-access-key-id: ${{ secrets.SANDBOX_PUT_LAMBDA_HANDLER_ON_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SANDBOX_PUT_LAMBDA_HANDLER_ON_S3_SECRET_KEY }}
          aws-region: ${{ secrets.SANDBOX_LAMBDA_HANDLER_S3_REGION }}
          s3-bucket: ${{ secrets.SANDBOX_LAMBDA_HANDLER_S3_BUCKET_NAME }}
          s3-base-path: ${{ env.S3_BASE_PATH}}
          ssm-parameter-name: ${{ env.SSM_PARAMETER_NAME}}
          zip-file-path: ${{ env.LOCAL_CODE_ZIP_PATH }}

      - name: Deploy to DEV
        uses: ./.github/actions/deploy-lambda-code-to-env
        with:
          aws-access-key-id: ${{ secrets.DEV_PUT_LAMBDA_HANDLER_ON_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEV_PUT_LAMBDA_HANDLER_ON_S3_SECRET_KEY }}
          aws-region: ${{ secrets.DEV_LAMBDA_HANDLER_S3_REGION }}
          s3-bucket: ${{ secrets.DEV_LAMBDA_HANDLER_S3_BUCKET_NAME }}
          s3-base-path: ${{ env.S3_BASE_PATH}}
          ssm-parameter-name: ${{ env.SSM_PARAMETER_NAME}}
          zip-file-path: ${{ env.LOCAL_CODE_ZIP_PATH }}
  
