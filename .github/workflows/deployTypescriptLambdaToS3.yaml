name: Transpile Typescript, zip, and deploy Lambda to S3

on:
  workflow_call:
    inputs:
      s3_base_path:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      S3_PATH: "${{ secrets.LAMBDA_HANDLER_S3_BUCKET_NAME }}/Lambda-handlers/${{ inputs.s3_base_path }}"
      
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Create an .npmrc # This will allow downloading private packages from npmjs
        env:
          PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS: ${{ secrets.PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS }}
        if: "${{ env.PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS != '' }}"
        run: echo "//registry.npmjs.org/:_authToken=${{ env.PEPPERI_NPMJS_PRIVATE_REPOS_READ_ACCESS }}" > ~/.npmrc

      - name: Install dependencies
        run: npm install
        
      - name: Build the project
        run: npm run build

      - name: Create ZIP file (only dist contents) # This assumes the build result, including node_modules, will be places in ./dist folder
        run: |
          cd dist
          zip -r ../lambda.zip .  # Zip only the contents of dist (not the folder itself)
          cd ..

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.PUT_LAMBDA_HANDLER_ON_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PUT_LAMBDA_HANDLER_ON_S3_SECRET_KEY }}
          aws-region: ${{ secrets.LAMBDA_HANDLER_S3_REGION }}
        
      - name: Upload to S3 (LATEST)
        run: |
          aws s3 cp lambda.zip s3://${{ env.S3_PATH }}/LATEST/code.zip

      - name: Upload to S3 (Commit SHA) # Just so we have a pointer from older versions to their commits
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          aws s3 cp lambda.zip s3://${{ env.S3_PATH }}/$COMMIT_SHA/code.zip

      - name: Output Deployment Info
        run: |
          echo "Uploaded to S3:"
          echo "LATEST: s3://${{ env.S3_PATH }}/LATEST/code.zip"
          echo "Versioned: s3://${{ env.S3_PATH }}/$COMMIT_SHA/code.zip"
